# GTMとGA4連携によるページビュー数・離脱率計測の完全ガイド

## 目次
1. 事前準備
2. GTMアカウント・コンテナの作成
3. GA4プロパティの作成
4. Next.jsプロジェクトでの実装
5. GTMでのタグ設定
6. 動作確認とテスト
7. 追加設定とカスタマイズ

---

## 1. 事前準備

### 必要なもの
- Googleアカウント
- アクセス可能なNext.jsプロジェクト
- ドメイン（本番環境用）

### 理解しておくべき用語
- **GTM（Google Tag Manager）**: タグ管理ツール
- **GA4（Google Analytics 4）**: ウェブサイト分析ツール
- **コンテナID**: GTMの識別子（GTM-XXXXXXX形式）
- **測定ID**: GA4の識別子（G-XXXXXXXXXX形式）
- **タグ**: 計測用のコード
- **トリガー**: タグを実行する条件

---

## 2. GTMアカウント・コンテナの作成

### Step 1: GTMにアクセス
1. ブラウザで https://tagmanager.google.com/ にアクセス
2. Googleアカウントでログイン

### Step 2: アカウント作成
1. 「アカウントを作成」をクリック
2. アカウント名を入力（例：「ロジカプロモAI」）
3. 国を選択（日本）
4. 「次へ」をクリック

### Step 3: コンテナ作成
1. コンテナ名を入力（例：「ロジカプロモAI ウェブサイト」）
2. プラットフォームで「ウェブ」を選択
3. 「作成」をクリック

### Step 4: 利用規約への同意
1. 利用規約を確認
2. 「はい」をクリック

### Step 5: コンテナIDの確認
- 作成後、GTM-XXXXXXX形式のコンテナIDが表示されます
- このIDをメモしておいてください（後で使用）

---

## 3. GA4プロパティの作成

### Step 1: GA4にアクセス
1. ブラウザで https://analytics.google.com/ にアクセス
2. Googleアカウントでログイン

### Step 2: プロパティ作成
1. 「プロパティを作成」をクリック
2. プロパティ名を入力（例：「ロジカプロモAI」）
3. レポートのタイムゾーンを選択（Asia/Tokyo）
4. 通貨を選択（日本円）
5. 「次へ」をクリック

### Step 3: ビジネス情報の入力
1. ビジネスの規模を選択
2. ビジネスの目的を選択
3. 「次へ」をクリック

### Step 4: データストリームの作成
1. プラットフォームで「ウェブ」を選択
2. ウェブサイトのURLを入力（例：https://yourdomain.com）
   - **注意：現在は確認用のURLを入力。本番環境のURLに変更する必要があります**
   - デプロイ後に実際のURLに更新してください
3. ストリーム名を入力（例：「ロジカプロモAI メインサイト」）
4. 「ストリームを作成」をクリック

### Step 5: 測定IDの確認
- 作成後、G-XXXXXXXXXX形式の測定IDが表示されます
- このIDをメモしておいてください（後で使用）

---

## 4. Next.jsプロジェクトでの実装

### Step 1: 環境変数の設定
1. プロジェクトのルートディレクトリに `.env.local` ファイルを作成
2. 以下の内容を追加：

```env
NEXT_PUBLIC_GTM_ID=GTM-XXXXXXX
NEXT_PUBLIC_GA_MEASUREMENT_ID=G-XXXXXXXXXX
```

※ GTM-XXXXXXXとG-XXXXXXXXXXは実際のIDに置き換えてください

### Step 2: GTMコンポーネントの作成
1. `src/components/` ディレクトリに `GoogleTagManager.tsx` ファイルを作成
2. 以下のコードを追加：

```tsx
'use client';

import Script from 'next/script';

interface GTMProps {
  gtmId: string;
}

export default function GoogleTagManager({ gtmId }: GTMProps) {
  return (
    <>
      <Script
        id="gtm"
        strategy="afterInteractive"
        dangerouslySetInnerHTML={{
          __html: `
            (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
            new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
            'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
            })(window,document,'script','dataLayer','${gtmId}');
          `,
        }}
      />
      <noscript>
        <iframe
          src={`https://www.googletagmanager.com/ns.html?id=${gtmId}`}
          height="0"
          width="0"
          style={{ display: 'none', visibility: 'hidden' }}
        />
      </noscript>
    </>
  );
}
```

### Step 3: レイアウトファイルの更新
1. `src/app/layout.tsx` ファイルを開く
2. 以下のように更新：

```tsx
import GoogleTagManager from '@/components/GoogleTagManager';

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const gtmId = process.env.NEXT_PUBLIC_GTM_ID || '';

  return (
    <html lang="ja">
      <head>
        <GoogleTagManager gtmId={gtmId} />
      </head>
      <body>
        {children}
      </body>
    </html>
  );
}
```

### Step 4: ページビュー追跡の追加（オプション）
1. `src/components/` ディレクトリに `Analytics.tsx` ファイルを作成
2. 以下のコードを追加：

```tsx
'use client';

import { usePathname, useSearchParams } from 'next/navigation';
import { useEffect } from 'react';

declare global {
  interface Window {
    gtag: (...args: any[]) => void;
  }
}

export default function Analytics() {
  const pathname = usePathname();
  const searchParams = useSearchParams();

  useEffect(() => {
    if (pathname && window.gtag) {
      window.gtag('config', process.env.NEXT_PUBLIC_GA_MEASUREMENT_ID, {
        page_path: pathname,
      });
    }
  }, [pathname, searchParams]);

  return null;
}
```

3. `layout.tsx` にAnalyticsコンポーネントを追加：

```tsx
import GoogleTagManager from '@/components/GoogleTagManager';
import Analytics from '@/components/Analytics';

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const gtmId = process.env.NEXT_PUBLIC_GTM_ID || '';

  return (
    <html lang="ja">
      <head>
        <GoogleTagManager gtmId={gtmId} />
      </head>
      <body>
        <Analytics />
        {children}
      </body>
    </html>
  );
}
```

---

## 5. GTMでのタグ設定

### Step 1: GTMに戻る
1. https://tagmanager.google.com/ にアクセス
2. 作成したコンテナを選択

### Step 2: GA4設定タグの作成
1. 左メニューから「タグ」をクリック
2. 「新規」ボタンをクリック
3. タグ名を入力（例：「GA4設定」）
4. 「タグの設定」をクリック
5. 「Google Analytics: GA4設定」を選択
6. 測定IDを入力（G-XXXXXXXXXX）
7. 「トリガー」セクションで「新規」をクリック
8. トリガー名を入力（例：「All Pages」）
9. 「トリガーの設定」で「ページビュー」を選択
10. 「保存」をクリック
11. タグの設定画面に戻り、「保存」をクリック

### Step 3: プレビューモードの有効化
1. 右上の「プレビュー」ボタンをクリック
2. プレビューモードが有効になります

### Step 4: 公開
1. 右上の「送信」ボタンをクリック
2. バージョン名を入力（例：「初回設定」）
3. バージョンの説明を入力（例：「GA4設定タグの追加」）
4. 「公開」をクリック

---

## 6. 動作確認とテスト

### Step 1: ローカル環境でのテスト
1. 開発サーバーを起動：
```bash
npm run dev
```

2. ブラウザで http://localhost:3000 にアクセス
3. 開発者ツール（F12）を開く
4. 「Console」タブでエラーがないか確認
5. 「Network」タブでGTMのリクエストが送信されているか確認

### Step 2: GTMプレビューモードでの確認
1. GTMでプレビューモードを有効にする
2. ブラウザでサイトにアクセス
3. プレビューモードの画面でタグが発火しているか確認

### Step 3: GA4での確認
1. GA4の管理画面にアクセス
2. 左メニューから「レポート」→「リアルタイム」を選択
3. サイトにアクセスして、リアルタイムレポートに表示されるか確認

### Step 4: 本番環境でのテスト
1. サイトを本番環境にデプロイ
2. 実際のドメインでアクセスしてテスト
3. GA4のリアルタイムレポートで確認

---

## 7. 追加設定とカスタマイズ

### カスタムイベントの設定例

#### お問い合わせフォーム送信の追跡
1. GTMで新しいタグを作成
2. タグタイプ：「Google Analytics: GA4イベント」
3. イベント名：「form_submit」
4. パラメータ：
   - form_name: contact_form
5. トリガー：フォーム送信時に発火するように設定

#### ダウンロードボタンクリックの追跡
1. GTMで新しいタグを作成
2. タグタイプ：「Google Analytics: GA4イベント」
3. イベント名：「file_download」
4. パラメータ：
   - file_name: ダウンロードファイル名
5. トリガー：ダウンロードリンクのクリック時に発火

### 離脱率の確認方法
1. GA4の管理画面にアクセス
2. 左メニューから「エンゲージメント」→「ページとスクリーン」を選択
3. 「離脱率」の列で確認

### プライバシー対応
1. Cookie同意バナーの実装
2. プライバシーポリシーの更新
3. データ保持期間の設定

---

## トラブルシューティング

### よくある問題と解決方法

#### 1. タグが発火しない
- 環境変数が正しく設定されているか確認
- GTMのコンテナIDが正しいか確認
- プレビューモードでタグの設定を確認

#### 2. GA4にデータが表示されない
- 測定IDが正しいか確認
- データストリームの設定を確認
- リアルタイムレポートで確認

#### 3. 開発環境でエラーが発生
- 環境変数ファイル（.env.local）が正しく配置されているか確認
- Next.jsの設定を確認

---

## 完了チェックリスト

- [ ] GTMアカウント・コンテナの作成
- [ ] GA4プロパティ・データストリームの作成
- [ ] 環境変数の設定
- [ ] GTMコンポーネントの実装
- [ ] レイアウトファイルの更新
- [ ] GTMでのタグ設定
- [ ] ローカル環境でのテスト
- [ ] 本番環境でのテスト
- [ ] GA4でのデータ確認

---

## 参考リンク

- [Google Tag Manager ヘルプ](https://support.google.com/tagmanager/)
- [Google Analytics 4 ヘルプ](https://support.google.com/analytics/)
- [Next.js ドキュメント](https://nextjs.org/docs)

---

## 注意事項

1. **プライバシー**: ユーザーのプライバシーを尊重し、適切な同意を得てからデータを収集してください
2. **データ保護**: 収集したデータは適切に管理し、不要になったら削除してください
3. **法規制**: GDPR、個人情報保護法などの関連法規制を遵守してください
4. **定期的な確認**: 設定後は定期的にデータが正常に収集されているか確認してください

このガイドに従って設定することで、サイトのページビュー数や離脱率を正確に計測できるようになります。
