## フェーズ4: GitHubセキュリティ問題解決とVercelデプロイ対応

### 問題発生時の状況
- GitHubのPush Protectionが発動
- Google Cloud Service Account Credentialsが検出される
- プッシュが拒否される

### ステップ1: セキュリティ問題の解決

#### 1-1. 秘密鍵ファイルの削除
```bash
# sheets-api.jsonをGitから削除
git rm sheets-api.json

# .gitignoreに追加（今後追跡しない）
echo "sheets-api.json" >> .gitignore
```

#### 1-2. 設定ファイルを環境変数対応に修正
```typescript
// src/config/sheets.ts を以下のように変更
export const sheetsConfig = {
  privateKey: process.env.GOOGLE_SHEETS_PRIVATE_KEY || "",
  clientEmail: process.env.GOOGLE_SHEETS_CLIENT_EMAIL || "sheets-api@promo-ai-467903.iam.gserviceaccount.com",
  spreadsheetId: process.env.GOOGLE_SHEETS_SPREADSHEET_ID || "1o7n78rdHqcBI78UteGfjPFgTB87lTy_hgu2QBBncmz8"
};
```

#### 1-3. 再コミット・プッシュ
```bash
# 変更をステージング
git add .

# コミット
git commit -m "セキュリティ: APIキーを環境変数対応に変更"

# プッシュ（今度は成功するはず）
git push origin main
```

### ステップ2: Vercel環境変数設定

#### 2-1. Vercelダッシュボードにアクセス
1. [Vercel Dashboard](https://vercel.com/dashboard) にログイン
2. プロジェクトを選択
3. 「Settings」タブをクリック
4. 「Environment Variables」を選択

#### 2-2. 環境変数を追加
以下の3つの環境変数を追加：

**GOOGLE_SHEETS_PRIVATE_KEY**
- Value: JSONファイルの`private_key`の値（改行文字`\n`を含む）
- Environment: Production, Preview, Development すべてにチェック

**GOOGLE_SHEETS_CLIENT_EMAIL**
- Value: `sheets-api@promo-ai-467903.iam.gserviceaccount.com`
- Environment: Production, Preview, Development すべてにチェック

**GOOGLE_SHEETS_SPREADSHEET_ID**
- Value: `1o7n78rdHqcBI78UteGfjPFgTB87lTy_hgu2QBBncmz8`
- Environment: Production, Preview, Development すべてにチェック

#### 2-3. 環境変数の確認
- 各環境変数が正しく設定されているか確認
- 「Save」ボタンをクリック

### ステップ3: デプロイ確認

#### 3-1. 自動再デプロイ
- 環境変数を保存すると、Vercelが自動で再デプロイを開始
- デプロイ状況を「Deployments」タブで確認

#### 3-2. 動作テスト
1. デプロイ完了後、本番URLにアクセス
2. お問い合わせフォームでテスト送信
3. スプレッドシートにデータが記録されるか確認

#### 3-3. エラー確認
- デプロイログでエラーがないか確認
- 環境変数が正しく読み込まれているか確認

### ステップ4: ローカル開発環境の設定

#### 4-1. .env.localファイル作成
```bash
# プロジェクトルートに.env.localファイルを作成
touch .env.local
```

#### 4-2. ローカル環境変数設定
```env
# .env.localファイルに以下を追加
GOOGLE_SHEETS_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDIIgF6yrMQxbWG\nYWR1C9FGYQMJHfdfUc1g+qgmNEC59dtNmfpj0FhBg+bY4+SYuZUHHlqJACWIzClQ\nCrwoxQe6ERunOHKbeKOaQWeYI6CG08I09SiAec7k8hUqOGciXLaP88eZBIn3Ko9G\nw1IK9XbLGkXqSgK9ry+ttJXjQjfxbGXSEz3s4OkdvnL7jAEiqBHqVqse8/YohYD9\nEbFVAnRCYQ/JehtH6ZATSt5eBi47fh/pKiFC0I+MQpRzHAqUBK2x0qihPO0DqMlO\nLQy64JU3qeF1SGT/b2e4wz7Pb8V6jpG5sY0pWX+FarAsH0EPaDdf4VAiUkCq8Np3\nMLWTffSnAgMBAAECggEAM+kWJyqCjdwqfIOwkeeRzcaGCgxayL+oHPqHOPmevF14\nF8XTu6Yj7kJvU1yxQ6gHbsRByX1fPv9ty9QtAAozOeEMIjCzEX6WOQG0BDNhhPdS\nTXg1nDV8I8hjEwN0ROZ1eBtMb3VM7+57IWiyVCNdP8s9zUqLMXZKUK0hn8PiTN1S\nis9UARQLNqUf/bmYEyJTDsGm49uiFuEQu/Yv+tOs0dtLj87b5y81LyUp7rgwK8Mp\nNnaWI1tsT+0Ey7nbcj9u2pS0boH7UCa81SPCH+mV6Aa8yQuttebzTbRjgi4a2Wte\nP2fXyNEmxRnk8+9xugTu67A6FtmpwOQkQ4EFFT1muQKBgQDn4DaKtThjtC4L3pED\nE3fLz/BJrpojnKTgIh3zFbwUG2PwcXjFKeTn1f3cE5IMeSZghieoE0vN1vfJbmEC\nXBuPAcEyYmScwr/sDY8V8YvhXBw3Iz2POYmADllluv0X7CmdowfchZTQA6uErICP\nYyj/NjmZaR+7QDnEnNKyOBZntQKBgQDc9FlSbCu3iSd8vb/D/kFk0t7kzAqjqGXx\nVX6BEwy7ez8AmvgrXLHtvBVRJS3VtVdbPs8kDc52wDC+co0cydNyij6vnqnm9D1o\n40xWHo7hhkaOY1LqHCZuxYKxerWOxCtXDJ3dgfmr/n3LftSwLMlko8Wn43GNUJps\npb6NVIesawKBgBKrphijIOg+UNrZz/lcbu/1TVbRfU3Sxh/Z/2lcXamMzw5ERMIz\nbmAQhgFbfg4NDz8EblsFOrxXS9pnTd5fxkRMkt7Yt1s7/zIloVjV+zppLUhvSPyo\nWF78SMx9MvXjKTKtNuvVwbbCJORo820YQevS1O56XXi5Yi1npzt8cqllAoGAXymW\nNtuD0J5vtVf7+avN+mCfwybmBiqHDXPm8iyENVMVhWs5K2PW9i8ldzduEDb0EsZw\nbHTN0XNhCwVHJXj/aruD2BubzW6v7DbJL+YlX5h3VugMU+wf2WGTsmDJRV3T1MAI\nVdie8abAAx7y95Wyf3fRr0dUJqrqd5TDBxe6/1UCgYEAkvirdJ5DVM6LQTfN2iAo\nwypxHrGybpWDnqCQqMF+byGDURuv74xSFbrCvfM8sJxIhZwoBAVRogs0hixc4plD\nJVl+7L6hC2ATMgiAr+pi8pT37oFNrAWB+ul/yA4oenPpvMSDMA9ndl8EFd7owwP7\nyhBHc4cNRhnOHrIbsDAfiYA=\n-----END PRIVATE KEY-----\n"
GOOGLE_SHEETS_CLIENT_EMAIL="sheets-api@promo-ai-467903.iam.gserviceaccount.com"
GOOGLE_SHEETS_SPREADSHEET_ID="1o7n78rdHqcBI78UteGfjPFgTB87lTy_hgu2QBBncmz8"
```

#### 4-3. ローカル開発サーバー再起動
```bash
# 開発サーバーを停止（Ctrl+C）
# 再起動
npm run dev
```

### ステップ5: 最終確認

#### 5-1. ローカル環境テスト
1. `http://localhost:3000/contact` にアクセス
2. テストデータでフォーム送信
3. スプレッドシートにデータが記録されるか確認

#### 5-2. 本番環境テスト
1. Vercelの本番URLにアクセス
2. テストデータでフォーム送信
3. スプレッドシートにデータが記録されるか確認

#### 5-3. エラーログ確認
- ブラウザの開発者ツールでエラーがないか確認
- Vercelのデプロイログでエラーがないか確認

## セキュリティ注意事項

### 重要なポイント
- **APIキーは絶対にGitHubに公開しない**
- **.env.localファイルは.gitignoreに含まれていることを確認**
- **本番環境では環境変数を使用**
- **ローカル開発でも環境変数を使用**

### トラブルシューティング
- 環境変数が読み込まれない場合：サーバー再起動
- デプロイエラーの場合：Vercelログを確認
- 権限エラーの場合：サービスアカウントの権限を確認

## フェーズ4の所要時間

- **セキュリティ問題解決**: 30分
- **Vercel環境変数設定**: 15分
- **デプロイ確認**: 15分
- **ローカル環境設定**: 15分
- **最終テスト**: 30分

**合計**: 約1.5時間

## 完成後の状態

✅ **GitHub**: 秘密鍵なしで安全
✅ **Vercel**: 環境変数で動作
✅ **ローカル**: 環境変数で動作
✅ **スプレッドシート**: 正常に記録
✅ **セキュリティ**: 完全に保護